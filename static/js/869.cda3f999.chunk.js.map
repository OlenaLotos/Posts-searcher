{"version":3,"file":"static/js/869.cda3f999.chunk.js","mappings":"iPA2EA,UAhEuB,WAAO,IAAD,EAC3B,GAA0BA,EAAAA,EAAAA,UAAS,CACjCC,KAAM,CAAC,EACPC,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAcC,EAAd,KAKQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MAIXC,GAAO,WAFIC,EAAAA,EAAAA,MAEKP,aAAT,eAAgBM,OAAQ,UAErCE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,oGAEfR,GAAS,SAAAS,GAAS,yBACbA,GADa,IAEhBZ,SAAS,EACTC,MAAO,MAHS,IAFH,UAQMY,EAAAA,EAAAA,IAAcT,GARpB,OAQTU,EARS,OASfX,GAAS,SAAAS,GACP,OAAO,kBACFA,GADL,IAEEb,KAAMe,GAET,IAdc,gDAgBfX,GAAS,SAAAS,GAAS,yBACbA,GADa,IAEhBX,MAAK,MAFW,IAhBH,yBAqBfE,GAAS,SAAAS,GACP,OAAO,kBACFA,GADL,IAEEZ,SAAS,GAEZ,IA1Bc,4EAAH,qDA8BhBW,GACD,GAAE,CAACR,EAAUC,IAEd,IAEA,EAAwBF,EAAMH,KAAtBgB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAEf,OACE,iBAAKC,UAAU,YAAf,WACE,mBAAQC,QANG,kBAAMZ,EAASE,EAAf,EAMX,sBACA,wBAAKO,KACL,uBAAIC,KACJ,SAAC,KAAD,CAAMd,MAAO,CAAEM,KAAAA,GAAQW,GAAE,iBAAYf,EAAZ,aAAzB,uBAGA,SAAC,KAAD,MAGL,C,0KCvEKgB,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,6CACTC,OAAQ,CACNC,OAAQ,MAICC,EAAQ,mCAAG,2GAAOC,EAAP,+BAAe,EAAf,SACCN,EAASO,IAAI,IAAK,CACvCJ,OAAQ,CACNG,MAAAA,KAHkB,uBACdE,EADc,EACdA,KADc,kBAOfA,GAPe,2CAAH,qDAURf,EAAa,mCAAG,WAAMT,GAAN,yFACJgB,EAASO,IAAT,WAAiBvB,IADb,uBACnBwB,EADmB,EACnBA,KADmB,kBAGpBA,GAHoB,2CAAH,sDAMbC,EAAW,mCAAG,WAAMC,GAAN,yFACFV,EAASO,IAAI,IAAK,CACvCJ,OAAQ,CACNO,EAAAA,KAHqB,uBACjBF,EADiB,EACjBA,KADiB,kBAOlBA,GAPkB,2CAAH,sDAUXG,EAAe,mCAAG,WAAM3B,GAAN,yFACNgB,EAASO,IAAT,WAAiBvB,EAAjB,cADM,uBACrBwB,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,qD","sources":["pages/SinglePostPage/SinglePostPage.jsx","shared/api/posts.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport {\n  Link,\n  Outlet,\n  useParams,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\n\nimport { getSinglePost } from '../../shared/api/posts';\n\nconst SinglePostPage = () => {\n  const [state, setState] = useState({\n    item: {},\n    loading: false,\n    error: null,\n  });\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const location = useLocation();\n\n  const from = location.state?.from || '/posts';\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        setState(prevState => ({\n          ...prevState,\n          loading: true,\n          error: null,\n        }));\n\n        const result = await getSinglePost(id);\n        setState(prevState => {\n          return {\n            ...prevState,\n            item: result,\n          };\n        });\n      } catch (error) {\n        setState(prevState => ({\n          ...prevState,\n          error,\n        }));\n      } finally {\n        setState(prevState => {\n          return {\n            ...prevState,\n            loading: false,\n          };\n        });\n      }\n    };\n\n    fetchPosts();\n  }, [setState, id]);\n\n  const goBack = () => navigate(from);\n\n  const { title, body } = state.item;\n\n  return (\n    <div className=\"container\">\n      <button onClick={goBack}>Go Back</button>\n      <h2>{title}</h2>\n      <p>{body}</p>\n      <Link state={{ from }} to={`/posts/${id}/comments`}>\n        Comments\n      </Link>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default SinglePostPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com/posts',\n  params: {\n    _limit: 12,\n  },\n});\n\nexport const getPosts = async (_page = 1) => {\n  const { data } = await instance.get('/', {\n    params: {\n      _page,\n    },\n  });\n\n  return data;\n};\n\nexport const getSinglePost = async id => {\n  const { data } = await instance.get(`/${id}`);\n\n  return data;\n};\n\nexport const searchPosts = async q => {\n  const { data } = await instance.get('/', {\n    params: {\n      q,\n    },\n  });\n\n  return data;\n};\n\nexport const getPostComments = async id => {\n  const { data } = await instance.get(`/${id}/comments`);\n\n  return data;\n};\n"],"names":["useState","item","loading","error","state","setState","id","useParams","navigate","useNavigate","from","useLocation","useEffect","fetchPosts","prevState","getSinglePost","result","title","body","className","onClick","to","instance","axios","baseURL","params","_limit","getPosts","_page","get","data","searchPosts","q","getPostComments"],"sourceRoot":""}