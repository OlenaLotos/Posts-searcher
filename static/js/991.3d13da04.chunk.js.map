{"version":3,"file":"static/js/991.3d13da04.chunk.js","mappings":"wOAiEA,UA5D+B,WAC7B,OAA0BA,EAAAA,EAAAA,UAAS,CACjCC,MAAO,GACPC,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAcC,EAAd,KAKQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,oGAEfJ,GAAS,SAAAK,GAAS,yBACbA,GADa,IAEhBR,SAAS,EACTC,MAAO,MAHS,IAFH,UAQMQ,EAAAA,EAAAA,IAAgBL,GARtB,OAQTM,EARS,OASfP,GAAS,SAAAK,GACP,OAAO,kBACFA,GADL,IAEET,MAAOW,GAEV,IAdc,gDAgBfP,GAAS,SAAAK,GAAS,yBACbA,GADa,IAEhBP,MAAK,MAFW,IAhBH,yBAqBfE,GAAS,SAAAK,GACP,OAAO,kBACFA,GADL,IAEER,SAAS,GAEZ,IA1Bc,4EAAH,qDA8BhBO,GACD,GAAE,CAACJ,EAAUC,IAEd,IAEMO,EAFYT,EAAVH,MAEea,KAAI,gBAAGR,EAAH,EAAGA,GAAIS,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,KAApB,OACzB,2BACE,kCACSF,EADT,YACwBC,KAEvBC,IAJMX,EADgB,IAS3B,OACE,gBAAKY,UAAU,YAAf,UACE,wBAAKL,KAGV,C,0KC7DKM,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,6CACTC,OAAQ,CACNC,OAAQ,MAICC,EAAQ,mCAAG,2GAAOC,EAAP,+BAAe,EAAf,SACCN,EAASO,IAAI,IAAK,CACvCJ,OAAQ,CACNG,MAAAA,KAHkB,uBACdE,EADc,EACdA,KADc,kBAOfA,GAPe,2CAAH,qDAURC,EAAa,mCAAG,WAAMtB,GAAN,yFACJa,EAASO,IAAT,WAAiBpB,IADb,uBACnBqB,EADmB,EACnBA,KADmB,kBAGpBA,GAHoB,2CAAH,sDAMbE,EAAW,mCAAG,WAAMC,GAAN,yFACFX,EAASO,IAAI,IAAK,CACvCJ,OAAQ,CACNQ,EAAAA,KAHqB,uBACjBH,EADiB,EACjBA,KADiB,kBAOlBA,GAPkB,2CAAH,sDAUXhB,EAAe,mCAAG,WAAML,GAAN,yFACNa,EAASO,IAAT,WAAiBpB,EAAjB,cADM,uBACrBqB,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,qD","sources":["pages/SinglePostCommentsPage/SinglePostCommentsPage.jsx","shared/api/posts.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getPostComments } from '../../shared/api/posts';\n\nconst SinglePostCommentsPage = () => {\n  const [state, setState] = useState({\n    items: [],\n    loading: false,\n    error: null,\n  });\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        setState(prevState => ({\n          ...prevState,\n          loading: true,\n          error: null,\n        }));\n\n        const result = await getPostComments(id);\n        setState(prevState => {\n          return {\n            ...prevState,\n            items: result,\n          };\n        });\n      } catch (error) {\n        setState(prevState => ({\n          ...prevState,\n          error,\n        }));\n      } finally {\n        setState(prevState => {\n          return {\n            ...prevState,\n            loading: false,\n          };\n        });\n      }\n    };\n\n    fetchPosts();\n  }, [setState, id]);\n\n  const { items } = state;\n\n  const elements = items.map(({ id, name, email, body }) => (\n    <li key={id}>\n      <p>\n        Name: {name}. Email: {email}\n      </p>\n      {body}\n    </li>\n  ));\n\n  return (\n    <div className=\"container\">\n      <ul>{elements}</ul>\n    </div>\n  );\n};\n\nexport default SinglePostCommentsPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com/posts',\n  params: {\n    _limit: 12,\n  },\n});\n\nexport const getPosts = async (_page = 1) => {\n  const { data } = await instance.get('/', {\n    params: {\n      _page,\n    },\n  });\n\n  return data;\n};\n\nexport const getSinglePost = async id => {\n  const { data } = await instance.get(`/${id}`);\n\n  return data;\n};\n\nexport const searchPosts = async q => {\n  const { data } = await instance.get('/', {\n    params: {\n      q,\n    },\n  });\n\n  return data;\n};\n\nexport const getPostComments = async id => {\n  const { data } = await instance.get(`/${id}/comments`);\n\n  return data;\n};\n"],"names":["useState","items","loading","error","state","setState","id","useParams","useEffect","fetchPosts","prevState","getPostComments","result","elements","map","name","email","body","className","instance","axios","baseURL","params","_limit","getPosts","_page","get","data","getSinglePost","searchPosts","q"],"sourceRoot":""}